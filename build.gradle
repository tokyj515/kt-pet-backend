plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.8'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // Servlet API (Spring Boot 3.x에 맞게 provided로 설정)
    compileOnly("jakarta.servlet:jakarta.servlet-api:6.0.0")

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // JSON 관련 의존성
    implementation 'com.google.code.gson:gson:2.7'
    implementation 'com.googlecode.json-simple:json-simple:1.1'

    // Database (MySQL & PostgreSQL)
    implementation 'mysql:mysql-connector-java:8.0.30'
    implementation 'org.postgresql:postgresql'

    // Security & JWT
    implementation 'org.springframework.boot:spring-boot-starter-security'
//    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON 처리를 위한 Jackson 지원 추가

    // Swagger (Spring Boot 3.x에서는 springdoc 사용)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // H2 Database
    runtimeOnly 'com.h2database:h2'
}


tasks.named('test') {
    useJUnitPlatform()
}
